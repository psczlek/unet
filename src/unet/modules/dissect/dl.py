from unet.modules.dissect.platform import FREEBSD, NETBSD, OPENBSD

__all__ = [
    "DLT_NULL",
    "DLT_EN10MB",
    "DLT_EN3MB",
    "DLT_AX25",
    "DLT_PRONET",
    "DLT_CHAOS",
    "DLT_IEEE802",
    "DLT_ARCNET",
    "DLT_SLIP",
    "DLT_PPP",
    "DLT_FDDI",
    "DLT_RAW",
    "DLT_RAW_ALT",
    "DLT_SLIP_BSDOS",
    "DLT_PPP_BSDOS",
    "DLT_PFSYNC",
    "DLT_HHDLC",
    "DLT_ATM_CLIP",
    "DLT_PPP_SERIAL",
    "DLT_PPP_ETHER",
    "DLT_SYMANTEC_FIREWALL",
    "DLT_C_HDLC",
    "DLT_IEEE802_11",
    "DLT_FRELAY",
    "DLT_LOOP",
    "DLT_ENC",
    "DLT_LINUX_SLL",
    "DLT_LTALK",
    "DLT_PFLOG",
    "DLT_PRISM_HEADER",
    "DLT_AIRONET_HEADER",
    "DLT_IP_OVER_FC",
    "DLT_IEEE802_11_RADIO",
    "DLT_ARCNET_LINUX",
    "DLT_LINUX_IRDA",
    "DLT_IEEE802_11_RADIO_AVS",
    "DLT_LINUX_LAPD",
    "DLT_BLUETOOTH_HCI_H4",
    "DLT_USB_LINUX",
    "DLT_PPI",
    "DLT_IEEE802_15_4_WITHFCS",
    "DLT_BLUETOOTH_HCI_H4_WITH_PHDR",
    "DLT_AX25_KISS",
    "DLT_PPP_WITH_DIR",
    "DLT_FC_2",
    "DLT_CAN_SOCKETCAN",
    "DLT_IPV4",
    "DLT_IPV6",
    "DLT_IEEE802_15_4_NOFCS",
    "DLT_USBPCAP",
    "DLT_NETLINK",
    "DLT_USB_DARWIN",
    "DLT_BLUETOOTH_LE_LL",
    "DLT_BLUETOOTH_LE_LL_WITH_PHDR",
    "DLT_VSOCK",
    "DLT_ETHERNET_MPACKET",
    "DLT_LINUX_SLL2",
    "DLT_TO_IP",
    "DLT_TO_IPV6",
    "create_dissector_entry",
]


DLT_NULL = 0
DLT_EN10MB = 1
DLT_EN3MB = 2
DLT_AX25 = 3
DLT_PRONET = 4
DLT_CHAOS = 5
DLT_IEEE802 = 6
DLT_ARCNET = 7
DLT_SLIP = 8
DLT_PPP = 9
DLT_FDDI = 10
if OPENBSD:
    DLT_RAW = 14
else:
    DLT_RAW = 12
DLT_RAW_ALT = 101
if FREEBSD or NETBSD:
    DLT_SLIP_BSDOS = 13
    DLT_PPP_BSDOS = 14
else:
    DLT_SLIP_BSDOS = 15
    DLT_PPP_BSDOS = 16
if FREEBSD:
    DLT_PFSYNC = 121
else:
    DLT_PFSYNC = 18
    DLT_HHDLC = 121
DLT_ATM_CLIP = 19
DLT_PPP_SERIAL = 50
DLT_PPP_ETHER = 51
DLT_SYMANTEC_FIREWALL = 99
DLT_C_HDLC = 104
DLT_IEEE802_11 = 105
DLT_FRELAY = 107
if OPENBSD:
    DLT_LOOP = 12
    DLT_ENC = 13
else:
    DLT_LOOP = 108
    DLT_ENC = 109
DLT_LINUX_SLL = 113
DLT_LTALK = 114
DLT_PFLOG = 117
DLT_PRISM_HEADER = 119
DLT_AIRONET_HEADER = 120
DLT_IP_OVER_FC = 122
DLT_IEEE802_11_RADIO = 127
DLT_ARCNET_LINUX = 129
DLT_LINUX_IRDA = 144
DLT_IEEE802_11_RADIO_AVS = 163
DLT_LINUX_LAPD = 177
DLT_BLUETOOTH_HCI_H4 = 187
DLT_USB_LINUX = 189
DLT_PPI = 192
DLT_IEEE802_15_4_WITHFCS = 195
DLT_BLUETOOTH_HCI_H4_WITH_PHDR = 201
DLT_AX25_KISS = 202
DLT_PPP_WITH_DIR = 204
DLT_FC_2 = 224
DLT_CAN_SOCKETCAN = 227
if OPENBSD:
    DLT_IPV4 = DLT_RAW
    DLT_IPV6 = DLT_RAW
else:
    DLT_IPV4 = 228
    DLT_IPV6 = 229
DLT_IEEE802_15_4_NOFCS = 230
DLT_USBPCAP = 249
DLT_NETLINK = 253
DLT_USB_DARWIN = 266
DLT_BLUETOOTH_LE_LL = 251
DLT_BLUETOOTH_LE_LL_WITH_PHDR = 256
DLT_VSOCK = 271
DLT_ETHERNET_MPACKET = 274
DLT_LINUX_SLL2 = 276


DLT_TO_IP = {}


DLT_TO_IPV6 = {}


def create_dissector_entry() -> str:
    return 'dl.type'
